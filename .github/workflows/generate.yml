name: build
on:
  push:
    branches:
      - main
jobs:
  cache-artifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm build
      - name: 'Download & Cache Stanford CoreNLP 🏋️'
        run: |
          wget -P tmp "https://downloads.cs.stanford.edu/nlp/software/stanford-ner-4.2.0.zip"
        unzip tmp/stanford-ner-4.2.0.zip -d tmp/
      - name: ' Cache🪨'
        uses: actions/cache@v2
        env:
          cache-name: cache-core-nlp
        with: |
          tmp/stanford-ner-2020-11-17
        key: ${{ runner.os }}-{{ hashFiles('**lockfiles') }}
  generate:
    needs: cache-artifacts
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: 'Checkout 🧞'
        uses: actions/checkout@v2
      - name: 'Download Stanford CoreNLP 🏋️'
        if: steps.core-nlp.outputs.cache-hit != 'true'
        run: |
          wget -P tmp "https://downloads.cs.stanford.edu/nlp/software/stanford-ner-4.2.0.zip"
      - name: 'Unzip Core NLP 🔥'
        run: unzip tmp/stanford-ner-4.2.0.zip -d tmp/
      - name: 'Install npm dependencies 🪨'
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: |
          npm install
      - name: 'compile 🏗️'
        run : npx tsc
      - name: 'Prepare 🧑‍🍳'
        run: |
          mkdir tmp/dist
          mkdir tmp/dist/feeds
          mkdir tmp/dist/podcasts
          mkdir tmp/dist/podcasts_ne
          mkdir tmp/dist/podcasts_palettes
          mkdir tmp/dist/podcasts_ne_n_palettes
          mkdir tmp/dist/.github
          mkdir tmp/dist/.github/workflows
      - name: 'Generate Files 🤖'
        run: node --max-old-space-size=10240 out/index.js
      - name: 'Build workflow Files 🏕️'
        run: node --max-old-space-size=10240 out/lib/workflow.js
      - name: 'Generate Palette 🎨'
        run : |
          pip3 install -r requirements.txt
          python3 scripts/generate.py
          cp -r tmp/dist dist/
          mkdir dist/out
          cp -r out dist/out
          cp LICENSE.txt dist/LICENSE.txt
          cp docs/dataReadMe.md dist/ReadMe.txt
          node out/lib/workflows.js
          cp tmp/tasks.yml dist/.github/workflows/tasks.yml
      - name: Verify Changed files 🐒
        uses: tj-actions/verify-changed-files@v8.3
        id: verify-changed-files
        with:
          files: |
            dist
      - name: 'Deploy 💾'
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: release
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
